package com.sun.jdi.request;

import com.sun.jdi.*;

/**
 * Request for notification when a class is unloaded in the target VM.
 * When an enabled ClassUnloadRequest is satisfied, a
 * {@link com.sun.jdi.event.EventSet event set} containing an
 * {@link com.sun.jdi.event.ClassUnloadEvent ClassUnloadEvent} will
 * be placed on the {@link com.sun.jdi.event.EventQueue EventQueue}.
 * The collection of existing ClassUnloadRequests is
 * managed by the {@link EventRequestManager}
 * <p>
 * Refer to the Java Virtual Machine Specification for more information
 * on class unloading.
 */
@jdk.Exported
public interface ClassUnloadRequest extends EventRequest {

    /**
     * Restricts the events generated by this request to the
     * unloading of reference types whose name matches a restricted
     * regular expression. Regular expressions are limited to exact
     * matches and patterns that begin with '*' or end with '*'; for
     * example, "*.Foo" or "java.*".
     * @param classPattern the pattern String to filter for.
     * @throws InvalidRequestStateException if this request is currently
     * enabled or has been deleted.
     * Filters may be added only to disabled requests.
     */
    void addClassFilter(String classPattern);

    /**
     * Restricts the events generated by this request to the
     * unloading of reference types whose name does <b>not</b> match
     * a restricted regular expression. Regular expressions are limited
     * to exact matches and patterns that begin with '*' or end with '*';
     * for example, "*.Foo" or "java.*".
     * @param classPattern the pattern String to filter against.
     * @throws InvalidRequestStateException if this request is currently
     * enabled or has been deleted.
     * Filters may be added only to disabled requests.
     */
    void addClassExclusionFilter(String classPattern);
}
