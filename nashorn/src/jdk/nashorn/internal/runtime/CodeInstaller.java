package jdk.nashorn.internal.runtime;

import jdk.nashorn.internal.codegen.ClassEmitter;

/**
 * Interface for installing classes passed to the compiler.
 * As only the code generating package (i.e. Context) knows about
 * the ScriptLoader and it would be a security hazard otherwise
 * the Compiler is given an installation interface for its code.
 * <p>
 * The compiler still retains most of the state around code emission
 * and management internally, so this is to avoid passing around any
 * logic that isn't directly related to installing a class

 * @param <T> owner class type for this code installer
 */
public interface CodeInstaller<T> {
    /**
     * Return the owner for the CodeInstaller, e.g. a {@link Context}
     * @return owner
     */
    public T getOwner();

    /**
     * Install a class
     * @param className name of the class with / separation
     * @param bytecode  bytecode
     * @return the installed class
     */
    public Class<?> install(final String className, final byte[] bytecode);

    /**
     * Verify generated bytecode before emission. This is called back from the
     * {@link ClassEmitter} or the {@link Compiler}. If the "--verify-code" parameter
     * hasn't been given, this is a nop
     *
     * @param code bytecode to verify
     */
    public void verify(final byte[] code);

    /**
     * Get next unique script id
     * @return unique script id
     */
    public long getUniqueScriptId();

    /**
     * Get next unique eval id
     * @return unique eval id
     */
    public long getUniqueEvalId();
}
